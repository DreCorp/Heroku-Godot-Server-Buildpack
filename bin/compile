#!/usr/bin/env bash

# Usage:
# bin/compile BUILD_DIR CACHE_DIR ENV_DIR

# The contents of CACHE_DIR will be persisted between builds. 
# You can cache the results of long processes like dependency resolution here 
# to speed up future builds.

BASEDIR=$(dirname $(dirname "$0"))
BUILD_DIR=$1
CACHE_DIR=$2

# 
source "$BASEDIR/lib/misc_funcs.sh"
source "$BASEDIR/lib/godot_funcs.sh"

export_env_dir() {
    env_dir=$1
    whitelist_regex=${2:-''}
    blacklist_regex=${3:-'^(PATH|GIT_DIR|CPATH|CPPATH|LD_PRELOAD|LIBRARY_PATH|JAVA_OPTS)$'}
    if [ -d "$env_dir" ]; then
        for e in $(ls $env_dir); do
            echo "$e" | grep -E "$whitelist_regex" | grep -qvE "$blacklist_regex" &&
            export "$e=$(cat $env_dir/$e)"
            :
        done
    fi
}

# Load the ENV variables from Heroku
export_env_dir $3

# make and copy buildpacks libs
mkdir -p $BUILD_DIR/lib
cp $BASEDIR/lib/start $BUILD_DIR/lib/start
# auth /lib/start
chmod +x $BUILD_DIR/lib/start


# Ensure GODOT_VERSION is set
if [ -z "$GODOT_VERSION" ]; then
    echo "You must set the GODOT_VERSION config var to a valid Godot stable release (eg. 3.4.2)!"
    exit 1
fi


# Check if Godot project file is present
if [ -f $BUILD_DIR/project.godot ]
then
    # Export from source
    
    # Ensure exports_presets.cfg exists
    if [ ! -f $BUILD_DIR/export_presets.cfg ]; then
        echo "You must have a exports_presets.cfg file present to export from source and it should have an export named Linux/X11."
        exit 1
    fi
    
    download_godot_headless $GODOT_VERSION
    download_godot_templates $GODOT_VERSION
    export_godot_project

# If Godotpack is present copy the pck file to BUILD_DIR/dist/server
elif [ -f $BUILD_DIR/Godotpack ]
then
    # Copy pck file to dist/server/linux.pck
    # Godotpack should point to server.pck location
    pckpath=`cat $BUILD_DIR/Godotpack`
    mkdir -p $BUILD_DIR/dist/server
    cp $BUILD_DIR/$pckpath $BUILD_DIR/dist/server/linux.pck
fi

download_godot_server $GODOT_VERSION
